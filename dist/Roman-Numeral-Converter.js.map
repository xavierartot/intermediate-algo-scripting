{"version":3,"sources":["../src/Roman-Numeral-Converter.js"],"names":["Polygon","height","width","calcArea","window","convertToRoman","num","cast","castLen","arr","arrRoman","count","alphaRoman","obj","add","val","toString","console","log","length","i","len"],"mappings":";;;;;;IAAMA,O;AACJ,mBAAYC,MAAZ,EAAoBC,KAApB,EAA2B;AAAA;;AACzB,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;;;+BAMU;AACT,aAAO,KAAKD,MAAL,GAAc,KAAKC,KAA1B;AACD;;;wBANU;AACT,aAAO,KAAKC,QAAL,EAAP;AACD;;;;;;AAOF,WAASC,MAAT,EAAiB;AAChB,WAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B;AACA;AACA,QAAIC,aAAJ;AAAA,QAAUC,gBAAV;AAAA,QAAmBC,YAAnB;AAAA,QAAwBC,iBAAxB;AAAA,QAAkCC,QAAM,CAAxC;AAAA,QAA2CC,mBAA3C;AAAA,QAAuDC,MAAI,EAA3D;AAAA,QAA+DC,MAAI,EAAnE;;AAEA;AACA;AACE;AACE;AACA;AACF;AACA;AACE;AACA;AACF;AACA;AACE;AACA;AACF;AACA;AACE;AACA;AACF;AACA;AACE;AACA;AACF;AACA;AACE;AACA;AACF;AACA;AACE;AACA;AACF;AACF;AACA;AACA;;AAEA;AACAJ,eAAW;AACPK,WAAK;AACH,WAAG,GADA;AAEH,WAAG,GAFA;AAGH,YAAI,GAHD;AAIH,YAAI,GAJD;AAKH,aAAK,GALF;AAMH,aAAK,GANF;AAOH,cAAM;AAPH;AADE,KAAX;;AAaAR,WAAMD,IAAIU,QAAJ,EAAN;AACAC,YAAQC,GAAR,CAAYX,KAAKY,MAAjB,EAtD2B,CAsDD;;AAE1B;AACA;AACA,QAAIZ,KAAK,CAAL,KAAU,GAAd,EAAmB;AACjB,WAAK,IAAIa,IAAI,CAAR,EAAWC,MAAMd,KAAK,CAAL,CAAtB,EAA+Ba,IAAIC,GAAnC,EAAwCD,GAAxC,EAA6C;AAC3CH,gBAAQC,GAAR,CAAYR,SAASK,GAAT,CAAa,GAAb,CAAZ;AACD;AACF,KAJD,MAIM,IAAGR,KAAK,CAAL,MAAY,GAAf,EAAmB;AAAC;AACxBU,cAAQC,GAAR,CAAYR,SAASK,GAAT,CAAa,GAAb,IAAoBL,SAASK,GAAT,CAAa,GAAb,CAAhC;AACD,KAFK,MAED;AACHE,cAAQC,GAAR,CAAYR,SAASK,GAAT,CAAa,GAAb,CAAZ;AACD;AACD,WAAOT,GAAP;AACD;;AAEDD,iBAAe,EAAf;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAnGA,EAmGCD,MAnGD,CAAD","file":"Roman-Numeral-Converter.js","sourcesContent":["class Polygon {\n  constructor(height, width) {\n    this.height = height;\n    this.width = width;\n  }\n\n  get area() {\n    return this.calcArea();\n  }\n\n  calcArea() {\n    return this.height * this.width;\n  }\n}\n\n(function(window) {\n  function convertToRoman(num) {\n    //transforme en chaine puis compte le combre de caractere.\n    //console.log(num.toString().length );\n    let cast, castLen, arr, arrRoman, count=0, alphaRoman, obj={}, add='';\n\n    //console.log(oave );\n    //alphaRoman = {\n      //{\n        //val :'1', \n        //numRoman : 'I'\n      //}\n      //{\n        //val :5,    \n        //numRoman : V\n      //},\n      //{\n        //val :10,    \n        //numRoman : x\n      //},\n      //{\n        //val :50    \n        //numRoman : L\n      //},\n      //{\n        //val :100    \n        //numRoman : C\n      //},\n      //{\n        //val :500    \n        //numRoman : D\n      //},\n      //{\n        //val :1000    \n        //numRoman : M\n      //}\n    //};\n    //alphaRoman.10;\n    //console.log(alphaRoman.V);\n\n    //var aobj = {here: {is: \"an\"}, object: 2};\n    arrRoman = {\n        val :{\n          1: 'I',\n          5: 'V',\n          10: 'X',\n          50: 'L',\n          100: 'C',\n          500: 'D',\n          1000: 'M'\n        }\n    };\n\n\n    cast= num.toString();\n    console.log(cast.length );// chiffre dans le nombre\n\n    //console.log(add += arrRoman.valRoman.I + cast[0] + ' : ');\n    //\n    if (cast[0] <='3') {\n      for (var i = 0, len = cast[0]; i < len; i++) {\n        console.log(arrRoman.val['1'] );\n      }\n    }else if(cast[0] === '4'){// ignore jhint\n      console.log(arrRoman.val['1'] + arrRoman.val['5'] );\n    }else{\n      console.log(arrRoman.val['5']);\n    }\n    return num;\n  }\n\n  convertToRoman(46);\n\n\n  //convertToRoman(2) should return \"II\".\n  //convertToRoman(3) should return \"III\".\n  //convertToRoman(4) should return \"IV\".\n  //convertToRoman(5) should return \"V\".\n  //convertToRoman(9) should return \"IX\".\n  //convertToRoman(12) should return \"XII\".\n  //convertToRoman(16) should return \"XVI\".\n  //convertToRoman(29) should return \"XXIX\".\n  //convertToRoman(44) should return \"XLIV\".\n  //convertToRoman(45) should return \"XLV\"\n  //convertToRoman(68) should return \"LXVIII\"\n  //convertToRoman(83) should return \"LXXXIII\"\n  //convertToRoman(97) should return \"XCVII\"\n  //convertToRoman(99) should return \"XCIX\"\n  //convertToRoman(500) should return \"D\"\n  //convertToRoman(501) should return \"DI\"\n  //convertToRoman(649) should return \"DCXLIX\"\n  //convertToRoman(798) should return \"DCCXCVIII\"\n  //convertToRoman(891) should return \"DCCCXCI\"\n  //convertToRoman(1000) should return \"M\"\n  //convertToRoman(1004) should return \"MIV\"\n  //convertToRoman(1006) should return \"MVI\"\n  //convertToRoman(1023) should return \"MXXIII\"\n  //convertToRoman(2014) should return \"MMXIV\"\n  //convertToRoman(3999) should return \"MMMCMXCIX\"\n}(window));\n\n"]}